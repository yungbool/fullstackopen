{"ast":null,"code":"var _jsxFileName = \"/Users/e.leung/codepen/fullstackopen/part2/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1,\n    columnNumber: 35\n  }, this);\n};\n\n_c = Header;\n\nconst Total = _ref2 => {\n  let {\n    sum\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", sum]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 29\n  }, this);\n};\n\n_c2 = Total;\n\nconst Part = _ref3 => {\n  let {\n    part\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Part;\n\nconst Content = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 29\n    }, this))\n  }, void 0, false);\n};\n\n_c4 = Content;\n\nconst Course = _ref5 => {\n  let {\n    course\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c5 = Course;\n\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  };\n  console.log(course.parts);\n  const total = course.parts.reduce((prev, curr) => prev.exercises + curr.exercises);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Course, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: [\"total of \", total, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Course\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/Users/e.leung/codepen/fullstackopen/part2/src/App.js"],"names":["Header","course","Total","sum","Part","part","name","exercises","Content","parts","map","id","Course","App","console","log","total","reduce","prev","curr"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAmB;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAnB;AAAA,CAAf;;KAAMD,M;;AAEN,MAAME,KAAK,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAc;AAAA,uCAAwBA,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,CAAd;;MAAMD,K;;AAEN,MAAME,IAAI,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACX;AAAA,eACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,SADpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA,CAAb;;MAAMH,I;;AAMN,MAAMI,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACd;AAAA,cACIA,KAAK,CAACC,GAAN,CAAYL,IAAD,iBAAW,QAAC,IAAD;AAAoB,MAAA,IAAI,EAAEA;AAA1B,OAAWA,IAAI,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,YAAtB;AADJ,mBADc;AAAA,CAAhB;;MAAMH,O;;AAMN,MAAMI,MAAM,GAAG;AAAA,MAAC;AAAEX,IAAAA;AAAF,GAAD;AAAA,sBACb;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAGA,MAAM,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAGL,MAAM,CAACQ;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADa;AAAA,CAAf;;MAAMG,M;;AAON,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMZ,MAAM,GAAG;AACbU,IAAAA,EAAE,EAAE,CADS;AAEbL,IAAAA,IAAI,EAAE,oCAFO;AAGbG,IAAAA,KAAK,EAAE,CACL;AACEH,MAAAA,IAAI,EAAE,uBADR;AAEEC,MAAAA,SAAS,EAAE,EAFb;AAGEI,MAAAA,EAAE,EAAE;AAHN,KADK,EAML;AACEL,MAAAA,IAAI,EAAE,0BADR;AAEEC,MAAAA,SAAS,EAAE,CAFb;AAGEI,MAAAA,EAAE,EAAE;AAHN,KANK,EAWL;AACEL,MAAAA,IAAI,EAAE,sBADR;AAEEC,MAAAA,SAAS,EAAE,EAFb;AAGEI,MAAAA,EAAE,EAAE;AAHN,KAXK,EAgBL;AACEL,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,SAAS,EAAE,EAFb;AAGEI,MAAAA,EAAE,EAAE;AAHN,KAhBK;AAHM,GAAf;AA0BAG,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACQ,KAAnB;AAEA,QAAMO,KAAK,GAAGf,MAAM,CAACQ,KAAP,CAAaQ,MAAb,CAAqB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACX,SAAL,GAAiBY,IAAI,CAACZ,SAA3D,CAAd;AAEA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BAAce,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAMD,CArCD;;MAAMH,G;AAuCN,eAAeA,GAAf","sourcesContent":["const Header = ({ course }) => (  <h1>{course}</h1> );\n\nconst Total = ({ sum }) => (<p>Number of exercises {sum}</p>);\n\nconst Part = ({ part }) => (\n  <p>\n    {part.name} {part.exercises}\n  </p>\n);\n\nconst Content = ({ parts }) => (\n  <>\n    { parts.map( (part) => (<Part key={part.id} part={part}/>) ) }\n  </>\n);\n\nconst Course = ({ course }) => (\n  <>\n    <Header course={ course.name } />\n    <Content parts={ course.parts } />\n  </>\n)\n\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10,\n        id: 1,\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7,\n        id: 2,\n      },\n      {\n        name: 'State of a component',\n        exercises: 14,\n        id: 3,\n      },\n      {\n        name: 'Redux',\n        exercises: 11,\n        id: 4,\n      },\n    ]\n  }\n  console.log(course.parts);\n\n  const total = course.parts.reduce( (prev, curr) => prev.exercises + curr.exercises );\n\n  return (\n    <>\n    <Course course={course} />\n    <em>total of {total} exercises</em>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}